"""recreate_all_tables

Revision ID: 0e844d7241b4
Revises: 
Create Date: 2024-12-11 16:18:18.530342

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '0e844d7241b4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('coupons', schema=None) as batch_op:
        batch_op.drop_index('ix_coupons_code')
        batch_op.drop_index('ix_coupons_id')

    op.drop_table('coupons')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index('ix_categories_id')

    op.drop_table('categories')
    with op.batch_alter_table('variants', schema=None) as batch_op:
        batch_op.drop_index('ix_variants_id')

    op.drop_table('variants')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index('ix_products_id')

    op.drop_table('products')
    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_system_logs_id')

    op.drop_table('system_logs')
    with op.batch_alter_table('order_progress', schema=None) as batch_op:
        batch_op.drop_index('ix_order_progress_id')

    op.drop_table('order_progress')
    with op.batch_alter_table('user_agreements', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('terms',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('privacy',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('privacy_third_party',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.create_unique_constraint('uq_user_agreements_user_id', ['user_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('provider_id', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('social_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('social_id', sa.VARCHAR(), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('is_verified')
        batch_op.drop_column('provider_id')

    with op.batch_alter_table('user_agreements', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_agreements_user_id', type_='unique')
        batch_op.alter_column('privacy_third_party',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('privacy',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('terms',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    op.create_table('order_progress',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('product_selection', sqlite.JSON(), nullable=True),
    sa.Column('date_selection', sqlite.JSON(), nullable=True),
    sa.Column('address_info', sqlite.JSON(), nullable=True),
    sa.Column('additional_options', sqlite.JSON(), nullable=True),
    sa.Column('current_step', sa.VARCHAR(), nullable=True),
    sa.Column('total_price', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('order_progress', schema=None) as batch_op:
        batch_op.create_index('ix_order_progress_id', ['id'], unique=False)

    op.create_table('system_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('level', sa.VARCHAR(), nullable=True),
    sa.Column('message', sa.VARCHAR(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('additional_data', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.create_index('ix_system_logs_id', ['id'], unique=False)

    op.create_table('products',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('category_id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('ix_products_id', ['id'], unique=False)

    op.create_table('variants',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('product_id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('base_price', sa.INTEGER(), nullable=True),
    sa.Column('additional_info', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('variants', schema=None) as batch_op:
        batch_op.create_index('ix_variants_id', ['id'], unique=False)

    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index('ix_categories_id', ['id'], unique=False)

    op.create_table('coupons',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=True),
    sa.Column('amount', sa.INTEGER(), nullable=True),
    sa.Column('expiry_date', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('coupons', schema=None) as batch_op:
        batch_op.create_index('ix_coupons_id', ['id'], unique=False)
        batch_op.create_index('ix_coupons_code', ['code'], unique=1)

    # ### end Alembic commands ###
